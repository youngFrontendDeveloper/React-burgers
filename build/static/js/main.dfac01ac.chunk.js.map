{"version":3,"sources":["sample-restaurants.js","components/Landing.js","firebase.js","components/Header.js","components/Shipment.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","components/Burger.js","sample-burgers.js","components/Auth/Login.js","components/Auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","useState","display","setDisplay","setTitle","setUrl","className","onClick","map","rest","getTitle","key","to","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","Header","props","Shipment","total","this","shipping","shippingNeon","amount","TransitionGroup","component","CSSTransition","classNames","timeout","enter","exit","React","Component","Order","renderOrder","burger","burgers","count","order","isAvailable","status","transitionsStyles","name","price","deleteFromOrder","orderIds","Object","keys","reduce","prevTotal","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","current","value","parseFloat","desc","image","addBurger","currentTarget","reset","onSubmit","ref","type","placeholder","autoComplete","EditBurgerForm","handleChange","e","updatedBurger","updateBurger","index","onChange","deleteBurger","MenuAdmin","loadSampleBurgers","Burger","details","src","alt","disabled","addToOrder","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","Login","authenticate","SignIn","state","user","authHandler","authData","a","console","log","email","setState","authProvider","GithubAuthProvider","auth","getAuth","signInWithPopup","then","result","credentialFromResult","catch","error","errorCode","code","errorMessage","message","children","App","restaurantsId","useParams","initialState","setBurgers","setOrder","useEffect","localStorageRef","localStorage","getItem","JSON","parse","burgersRef","onValue","snapshot","data","val","set","setItem","stringify","newOrder","copyBurgers","Date","now","NotFound","Router","exact","path","element","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.dfac01ac.chunk.js","sourcesContent":["// Наши рестораны\nconst restaurants = [\n  {\n    title: \"Hot Burger Тверская\",\n    url: \"hot-burger-tverskaya\",\n    id: \"rest-1\",\n  },\n\n  {\n    title: \"Hot Burger Маросейка\",\n    url: \"hot-burger-maroseyka\",\n    id: \"rest-2\",\n  },\n  {\n    title: \"Hot Burger Петровка\",\n    url: \"hot-burger-petrovka\",\n    id: \"rest-3\",\n  },\n];\n\nexport default restaurants;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport restaurants from \"../sample-restaurants\";\r\n\r\nfunction Landing() {\r\n  const [ display, setDisplay ] = useState( false );\r\n  const [ title, setTitle ] = useState( \"\" );\r\n  const [ url, setUrl ] = useState( \"\" );\r\n\r\n  const displayList = () => {\r\n    setDisplay( !display );\r\n  };\r\n\r\n  const getTitle = (rest) => {\r\n    setTitle( rest.title );\r\n    setUrl( rest.url );\r\n    setDisplay( false );\r\n  };\r\n\r\n  return (\r\n    <div className=\"restaurant_select\">\r\n      <div className=\"restaurant_select_top\">\r\n        <div\r\n          onClick={ displayList }\r\n          className=\"restaurant_select_top-header font-effect-outline\"\r\n        >\r\n          { title ? title : \"Выберите ресторан:\" }\r\n        </div>\r\n        <div className=\"arrow_picker\">\r\n          <div className=\"arrow_picker-up\"></div>\r\n          <div className=\"arrow_picker-down\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      { display && (\r\n        <div className=\"restaurant_select_bottom\">\r\n          <ul>\r\n            { restaurants.map( (rest) => {\r\n              return (\r\n                <li onClick={ () => getTitle( rest ) } key={ rest.id }>\r\n                  { rest.title }\r\n                </li>\r\n              );\r\n            } ) }\r\n          </ul>\r\n        </div>\r\n      ) }\r\n      { title && !display ? (\r\n        <Link\r\n          className=\"button\"\r\n          to={ `/restaurant/${ url }` }\r\n        >\r\n          Перейти в ресторан\r\n        </Link>\r\n      ) : null }\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Landing;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAYSsLnOl9Fz8J5q5l_D4yarf-T3AihgFA\",\r\n  authDomain: \"very-hot-burgers-72242.firebaseapp.com\",\r\n  databaseURL: \"https://very-hot-burgers-72242-default-rtdb.firebaseio.com\",\r\n  projectId: \"very-hot-burgers-72242\",\r\n  storageBucket: \"very-hot-burgers-72242.appspot.com\",\r\n  messagingSenderId: \"265624169041\",\r\n  appId: \"1:265624169041:web:de71bf29aea3d60a13a670\"\r\n};\r\n\r\n// Initialize Firebase - связывания нашего проекта с Firebase:\r\nexport const app = initializeApp( firebaseConfig );\r\n\r\n// Получаем данные из базы данных firebase:\r\nexport const db = getDatabase( app );\r\n\r\n// // сылка на restaurants из базы данных\r\n// export const restaurantsRef = ref( db, \"restaurants\" );\r\n//\r\n// // Доступ к конкретному restaurant\r\n// export const getRestaurantRefById = (id) => ref( db, `restaurants/${ id }` );\r\n//\r\n//\r\n// // export const base = Rebase.createClass( db );\r\n// console.log( db );\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <div className=\"wrap\">\r\n      <div className=\"header-content\">\r\n        <div className=\"header-rating\">\r\n          <div className=\"header-rating_tag\">Рейтинг:</div>\r\n          <div className=\"header-rating_icon\">★★★★★</div>\r\n        </div>\r\n\r\n        <div className=\"header-divider\"></div>\r\n        <h1 className=\"font-effect-fire-animation\">{ props.title }</h1>\r\n        <h3>\r\n          <span>\r\n            Быстрая доставка горячих\r\n            <span className=\"sub-header\"> #бургеров</span>\r\n          </span>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Shipment extends React.Component {\r\n\r\n  static propTypes = {\r\n    total: PropTypes.number\r\n  };\r\n\r\n  render() {\r\n    const total = this.props.total;\r\n    const shipping = total > 0 && total < 500 ? 350 : 99;\r\n    const shippingNeon = shipping === 99 ? (\r\n      <span className=\"font-effect-neon total_wrap-cheap\">{ shipping } ₽</span>\r\n    ) : (\r\n      <span>{ shipping } ₽</span>\r\n    );\r\n    const amount = total + shipping;\r\n\r\n    return (\r\n      <div className=\"total\">\r\n        <div className=\"total_wrap\">\r\n          <div>\r\n            <div>Доставка: { total > 0 ? shippingNeon : null }</div>\r\n            <div className=\"total_wrap-free\">\r\n              { total < 500\r\n                ? `Закажите еще на ${ 500 - total } ₽ для доставки за 99 ₽`\r\n                : null }\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"total_wrap-final\">Итого: &nbsp;\r\n            <TransitionGroup component=\"span\" className=\"amount\">\r\n              <CSSTransition classNames=\"amount\" key={ amount } timeout={ { enter: 500, exit: 500 } }>\r\n                <span>{ amount } </span>\r\n              </CSSTransition>\r\n            </ TransitionGroup>\r\n            &nbsp; ₽\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n      ;\r\n  }\r\n}\r\n\r\nexport default Shipment;","import React from \"react\";\r\nimport Shipment from \"./Shipment\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    deleteFromOrder: PropTypes.func,\r\n    burgers: PropTypes.object,\r\n    order: PropTypes.object\r\n  };\r\n\r\n  renderOrder = (key) => {\r\n    const burger = this.props.burgers[ key ];\r\n    const count = this.props.order[ key ];\r\n    const isAvailable = burger && burger.status === \"available\";\r\n    const transitionsStyles = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n\r\n    if( isAvailable ) {\r\n      return <CSSTransition\r\n        { ...transitionsStyles }>\r\n        <li key={ key }>\r\n        <span className=\"order__container\">\r\n          <TransitionGroup component=\"span\" className=\"count\">\r\n            <CSSTransition classNames=\"count\" key={ count } timeout={ { enter: 500, exit: 500 } }>\r\n                <span>{ count } </span>\r\n              </CSSTransition>\r\n          </TransitionGroup>\r\n          &nbsp; шт. { burger.name } &nbsp;\r\n          <TransitionGroup component=\"span\" className=\"cost\">\r\n            <CSSTransition\r\n              classNames=\"cost\"\r\n              key={ count * burger.price }\r\n              timeout={ { enter: 500, exit: 500 } }>\r\n              <span> { count * burger.price }&nbsp; </span>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n          ₽ &emsp;\r\n          <button className=\"cancellItem\" onClick={ () => {\r\n            this.props.deleteFromOrder( key );\r\n          } }> &times;</button>\r\n    </span>\r\n        </li>\r\n      </CSSTransition>;\r\n\r\n    }\r\n    return <CSSTransition { ...transitionsStyles }      >\r\n      <li className=\"unavailable\" key={ key }>Извините, { burger ? burger.name : \"бургер\" } временно\r\n        недоступен\r\n      </li>\r\n    </CSSTransition>;\r\n  };\r\n\r\n  render() {\r\n    // console.log( this.props.order );\r\n    // console.log( Object.keys( this.props.order ) );\r\n\r\n    const orderIds = Object.keys( this.props.order || {} );\r\n    const total = orderIds.reduce( (prevTotal, key) => {\r\n      const burger = this.props.burgers[ key ];\r\n      const count = this.props.order[ key ];\r\n      const isAvailable = burger && burger.status === \"available\";\r\n      if( isAvailable ) {\r\n        return prevTotal + burger.price * count;\r\n      }\r\n      return prevTotal;\r\n    }, 0 );\r\n\r\n    return (\r\n      <div>\r\n        <h2>Ваш заказ</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          { this.props.order && orderIds.map( this.renderOrder ) }\r\n        </TransitionGroup>\r\n        { total > 0 ? ( <Shipment total={ total }/> ) : (\r\n          <div className=\"nothingSelected\">Выберите блюдо и нажмите на кнопку 'Заказать'</div> ) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddBurgerForm extends React.Component {\r\n  static propTypes = {\r\n    addBurger: PropTypes.func\r\n  };\r\n\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createBurger = (event) => {\r\n    event.preventDefault();\r\n\r\n    const burger = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat( this.priceRef.current.value ) || 0,\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addBurger( burger );\r\n    // Очищаем все поля формы:\r\n    event.currentTarget.reset();\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={ this.createBurger } className=\"burger-edit\">\r\n          <input ref={ this.nameRef } name=\"name\" type=\"text\" placeholder=\"Name\" autoComplete=\"off\"/>\r\n          <input ref={ this.priceRef } name=\"price\" type=\"text\" placeholder=\"Price\" autoComplete=\"off\"/>\r\n          <select ref={ this.statusRef } name=\"status\" className=\"status\">\r\n            <option value=\"available\">Доступно</option>\r\n            <option value=\"unavailable\">Убрать из меню</option>\r\n          </select>\r\n          <textarea ref={ this.descRef } name=\"desc\" placeholder=\"Description\"/>\r\n          <input ref={ this.imageRef } name=\"image\" type=\"text\" placeholder=\"Image\" autoComplete=\"off\"/>\r\n          <button type=\"submit\">Добавить в меню</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBurgerForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditBurgerForm extends React.Component {\r\n  static propTypes = {\r\n    updateBurger: PropTypes.func,\r\n    deleteBurger: PropTypes.func,\r\n    burger: PropTypes.shape( {\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      price: PropTypes.number,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string\r\n    } ),\r\n    index: PropTypes.string\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const updatedBurger = {\r\n      ...this.props.burger,\r\n      // [ e.currentTarget.name ]: e.currentTarget.value\r\n      [ e.currentTarget.name ]: e.currentTarget.name === \"price\" ? parseFloat( e.currentTarget.value ) || 0 : e.currentTarget.value\r\n    };\r\n\r\n    this.props.updateBurger( this.props.index, updatedBurger );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"burger-edit\">\r\n        <input onChange={ this.handleChange } name=\"name\" type=\"text\"\r\n               value={ this.props.burger.name }/>\r\n        <input onChange={ this.handleChange } name=\"price\" type=\"text\"\r\n               value={ this.props.burger.price }/>\r\n        <select onChange={ this.handleChange } name=\"status\" className=\"status\">\r\n          <option value=\"available\">Доступно</option>\r\n          <option value=\"unavailable\">Не доступно</option>\r\n        </select>\r\n        <textarea onChange={ this.handleChange } name=\"desc\" value={ this.props.burger.desc }/>\r\n        <input onChange={ this.handleChange } name=\"image\" type=\"text\"\r\n               value={ this.props.burger.image }/>\r\n        <button\r\n          onClick={ () => this.props.deleteBurger( this.props.index ) }\r\n        >Удалить из меню\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditBurgerForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddBurgerForm from \"./AddBurgerForm\";\r\nimport EditBurgerForm from \"./EditBurgerForm\";\r\n\r\nclass MenuAdmin extends React.Component {\r\n\r\n  static propTypes = {\r\n    addBurger: PropTypes.func,\r\n    updateBurger: PropTypes.func,\r\n    deleteBurger: PropTypes.func,\r\n    loadSampleBurgers: PropTypes.func,\r\n    burgers: PropTypes.object\r\n  };\r\n\r\n  render() {\r\n    const burgers = this.props.burgers;\r\n    return (\r\n      <div className=\"menu-admin\">\r\n        <h2>Управление меню</h2>\r\n        { burgers ?\r\n          Object.keys( burgers ).map( key => {\r\n            return <EditBurgerForm\r\n              key={ key }\r\n              burger={ burgers[ key ] }\r\n              index={ key }\r\n              updateBurger={ this.props.updateBurger }\r\n              deleteBurger={ this.props.deleteBurger }/>;\r\n          } ) : null\r\n        }\r\n        <AddBurgerForm addBurger={ this.props.addBurger }/>\r\n        <button onClick={ this.props.loadSampleBurgers }>Загрузить бургеры</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuAdmin;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Burger extends React.Component {\r\n\r\n  static propTypes = {\r\n    details: PropTypes.shape( {\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      price: PropTypes.number,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string\r\n    } ),\r\n    index: PropTypes.string,\r\n    addToOrder: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n\r\n    const isAvailable = status === \"available\";\r\n\r\n\r\n    return (\r\n      <>\r\n        <li className=\"menu-burger\">\r\n          <div className=\"image-container\">\r\n            <img src={ image } alt={ name }/>\r\n          </div>\r\n          <div className=\"burger-details\">\r\n            <h3 className=\"burger-name\">{ name } <span className=\"price\">{ price } ₽</span></h3>\r\n            <p>{ desc }</p>\r\n            <button className=\"buttonOrder\"\r\n                    disabled={ !isAvailable }\r\n                    onClick={ () => this.props.addToOrder( this.props.index ) }>\r\n              { isAvailable ? \"Заказать\" : \"Временно нет\" }\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Burger;","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: \"Чизбургер\",\n    image: \"/images/cheese.jpg\",\n    desc:\n      \"Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.\",\n    price: 110,\n    status: \"available\"\n  },\n\n  burger2: {\n    name: \"Чикенбургер\",\n    image: \"/images/chicken.jpg\",\n    desc:\n      \"Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.\",\n    price: 140,\n    status: \"available\"\n  },\n\n  burger3: {\n    name: \"Двойной Гамбургер\",\n    image: \"/images/double.jpg\",\n    desc:\n      \"Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.\",\n    price: 200,\n    status: \"unavailable\"\n  },\n\n  burger4: {\n    name: \"Фишбургер\",\n    image: \"/images/fish.jpg\",\n    desc:\n      \"Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.\",\n    price: 150,\n    status: \"available\"\n  },\n\n  burger5: {\n    name: \"Картофель Фри\",\n    image: \"/images/fries.jpg\",\n    desc:\n      \"Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!\",\n    price: 85,\n    status: \"available\"\n  },\n\n  burger6: {\n    name: \"King Бургер\",\n    image: \"/images/ham.jpg\",\n    desc:\n      \"Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.\",\n    price: 450,\n    status: \"available\"\n  },\n\n  burger7: {\n    name: \"Мега Бургер\",\n    image: \"/images/mega.jpg\",\n    desc:\n      \"Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.\",\n    price: 500,\n    status: \"available\"\n  },\n\n  burger8: {\n    name: \"Бургер в Пите\",\n    image: \"/images/pita.jpg\",\n    desc:\n      \"Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.\",\n    price: 380,\n    status: \"available\"\n  },\n\n  burger9: {\n    name: \"Village Фри\",\n    image: \"/images/bakedFries.jpg\",\n    desc:\n      \"Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями\",\n    price: 90,\n    status: \"available\"\n  }\n};\n\nexport default sampleBurgers;\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login\">\r\n        <h2>Авторизация</h2>\r\n        <p>Введите логин и пароль Вашего аккаунта GitHub</p>\r\n        <button className=\"github\" onClick={ () => props.authenticate() }>Войти</button>\r\n      </div>\r\n    </div> );\r\n}\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { getAuth, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\r\nimport Login from \"./Login\";\r\n\r\nclass SignIn extends React.Component {\r\n  state = {\r\n    user: \"\"\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //\r\n  // }\r\n\r\n  authHandler = async(authData) => {\r\n    console.log( authData );\r\n    const { email } = authData.user;\r\n    this.setState( { user: email } );\r\n  };\r\n\r\n  authenticate = () => {\r\n    const authProvider = new GithubAuthProvider();\r\n    const auth = getAuth();\r\n    signInWithPopup( auth, authProvider )\r\n      .then( (result) => {\r\n        const credential = GithubAuthProvider.credentialFromResult( result );\r\n        // const token = credential.accessToken;\r\n        console.log( result.user.email );\r\n        // const user = result.user;\r\n        this.setState( { user: result.user.email } );\r\n        console.log( this.state.user );\r\n      } ).catch( (error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log( errorCode, errorMessage );\r\n      // The email of the user's account used.\r\n      const email = error.email;\r\n      console.log( email );\r\n      // The AuthCredential type that was used.\r\n      // const credential = GithubAuthProvider.credentialFromError( error );\r\n      // ...\r\n    } );\r\n  };\r\n\r\n  render() {\r\n    if( !this.state.user ) {\r\n      return <Login authenticate={ this.authenticate }/>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default SignIn;","import React, { useState, useEffect } from \"react\";\r\nimport { ref, set, onValue } from \"firebase/database\";\r\nimport { db } from \"../firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport MenuAdmin from \"./MenuAdmin\";\r\nimport Burger from \"./Burger\";\r\nimport sampleBurgers from \"../sample-burgers\";\r\nimport SignIn from \"./Auth/SignIn\";\r\n\r\n\r\nfunction App() {\r\n  const { restaurantsId } = useParams();\r\n  const initialState = sampleBurgers;\r\n  const [ burgers, setBurgers ] = useState( initialState );\r\n  const [ order, setOrder ] = useState( {} );\r\n\r\n\r\n  // Загрузка заказа из localStorage и бургеров из Firebase после отрисовки страницы:\r\n  useEffect( () => {\r\n    // const unsubscribe = () => {  // функция для дальнейшей отписки\r\n    const localStorageRef = localStorage.getItem( restaurantsId );\r\n    setOrder( JSON.parse( localStorageRef ) );\r\n\r\n    const burgersRef = ref( db, `${ restaurantsId }/burgers` );\r\n    onValue( burgersRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      setBurgers( data );\r\n    } );\r\n    // };\r\n    // return unsubscribe;   // отписка от получения данных\r\n  }, [ restaurantsId ] );\r\n\r\n\r\n  //  Обновление данных базы Firebase при изменении в burgers\r\n  useEffect( () => {\r\n    set( ref( db, `${ restaurantsId }/burgers` ), burgers );\r\n    console.log( burgers );\r\n  }, [ restaurantsId, burgers ] );\r\n\r\n\r\n  // Записываем в localStorage сведения о заказе при обновлении заказа:\r\n  useEffect( () => {\r\n    localStorage.setItem( restaurantsId, JSON.stringify( order ) );\r\n  }, [ restaurantsId, order ] );\r\n\r\n\r\n  // Добавление бургеров в меню\r\n  const addBurger = (burger) => {\r\n    console.log( \"Added\" );\r\n    //1.Делаем копию объекта burgers:\r\n    const copyBurgers = { ...burgers };\r\n\r\n    //2. Добавляем новый бургер в переменную burgers:\r\n    copyBurgers[ `burger${ Date.now() }` ] = burger;\r\n\r\n    //3. Записываем наш новый объект burgers в state:\r\n    setBurgers( copyBurgers );\r\n\r\n    //4. Записываем наш новый объект burgers из state в Firebase:\r\n    // writeBurgers();\r\n\r\n  };\r\n\r\n  // Функция для записи данных burgers из state в Firebase:\r\n  function writeBurgers() {\r\n    set( ref( db, `${ restaurantsId }/burgers` ), burgers );\r\n  }\r\n\r\n  // Загружаем бургеры из Firebase\r\n  const loadSampleBurgers = () => {\r\n    const burgersRef = ref( db, `${ restaurantsId }/burgers` );\r\n    onValue( burgersRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      setBurgers( data );\r\n    } );\r\n\r\n  };\r\n\r\n  // Добавляем бургеры в заказ order\r\n  const addToOrder = (key) => {\r\n\r\n    //1.Делаем копию объекта state:\r\n    const newOrder = { ...order };\r\n\r\n    //2.Добавляем в заказ бургер со значением 1 либо увеличиваем текущее значение на 1:\r\n    newOrder[ key ] = newOrder[ key ] + 1 || 1;\r\n\r\n    //3. Записываем наш новый объект order в state:\r\n    setOrder( newOrder );\r\n    //4. Записываем наш новый объект burgers из state в Firebase:\r\n    writeBurgers();\r\n\r\n  };\r\n\r\n  // Функция для обновление бургера:\r\n  const updateBurger = (key, updatedBurger) => {\r\n    //1.Делаем копию объекта burgers:\r\n    const copyBurgers = { ...burgers };\r\n\r\n    //2.Обновляем конкретный burger по ключу в стейте burgers:\r\n    copyBurgers[ key ] = updatedBurger;\r\n\r\n    //3.Обновляем стейт burgers:\r\n    setBurgers( copyBurgers );\r\n    //4. Записываем наш новый объект burgers из state в Firebase:\r\n    // writeBurgers();\r\n  };\r\n\r\n  // Функция на удаление бургера в компоненте Burger\r\n  const deleteBurger = (key) => {\r\n    console.log( key );\r\n    //1.Делаем копию объекта burgers:\r\n    const copyBurgers = { ...burgers };\r\n    console.log( copyBurgers );\r\n\r\n    //2.Удаляем конкретный burger по ключу в стейте burgers :\r\n    console.log( copyBurgers[ key ] );\r\n    delete copyBurgers[ key ];\r\n    // copyBurgers[ key ] = null;\r\n    console.log( copyBurgers );\r\n\r\n    //3.Обновляем стейт burgers:\r\n    setBurgers( copyBurgers );\r\n    console.log( burgers );\r\n    //4. Записываем наш новый объект burgers из state в Firebase:\r\n    // writeBurgers();\r\n  };\r\n\r\n  // Функция на удаление бургера из order:\r\n  const deleteFromOrder = (key) => {\r\n    //1.Делаем копию объекта state:\r\n    const newOrder = { ...order };\r\n\r\n    //2.Отнимаем в заказе из количества бургеров 1 , и когда количество становится равно 0, убираем бургеры из заказа:\r\n    newOrder[ key ] = newOrder[ key ] - 1;\r\n    if( newOrder[ key ] === 0 ) {\r\n      delete newOrder[ key ];\r\n    }\r\n    //3. Записываем наш новый объект order в state:\r\n    setOrder( newOrder );\r\n  };\r\n\r\n  return (\r\n    <SignIn>\r\n      <div className=\"burger-paradise\">\r\n        <div className=\"menu\">\r\n          <Header title=\"Hot Burgers\"/>\r\n          <ul className=\"burgers\">\r\n            { burgers ?\r\n              Object.keys( burgers ).map( key => {\r\n                // console.log( Object.keys( this.state.burgers ) );\r\n                return <Burger\r\n                  key={ key }\r\n                  index={ key }\r\n                  details={ burgers[ key ] }\r\n                  addToOrder={ addToOrder }\r\n                />;\r\n              } ) : null\r\n            }\r\n          </ul>\r\n        </div>\r\n        <Order burgers={ burgers } order={ order } deleteFromOrder={ deleteFromOrder }/>\r\n        <MenuAdmin\r\n          addBurger={ addBurger }\r\n          loadSampleBurgers={ loadSampleBurgers }\r\n          burgers={ burgers }\r\n          updateBurger={ updateBurger }\r\n          deleteBurger={ deleteBurger }\r\n        />\r\n      </div>\r\n    </SignIn>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <p>Страница не найдена</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Landing from \"./Landing\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Landing />} />\r\n        <Route path=\"/restaurant/:restaurantsId\" element={<App />} />\r\n        <Route path=\"*\" element={<NotFound />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./components/Router\";\n\nimport \"./css/style.css\";\n\nReactDOM.render( <Router/>, document.querySelector( \"#root\" ) );\n"],"sourceRoot":""}